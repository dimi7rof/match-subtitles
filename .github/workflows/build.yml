name: Build and Release


on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Get latest release version
        id: get_latest_release
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            let latest = '1.0.0';
            if (releases.data.length > 0) {
              const tag = releases.data[0].tag_name.replace(/^v/, '');
              latest = tag;
            }
            core.setOutput('latest', latest);

      - name: Calculate next patch version
        id: next_version
        shell: bash
        run: |
          latest="${{ steps.get_latest_release.outputs.latest }}"
          echo "$latest"
          IFS='.' read -r major minor patch <<< "$latest"
          if [[ -z "$major" || -z "$minor" || -z "$patch" ]]; then
            next_version="1.0.1"
          echo "$next_version"
          else
            echo "$patch"
            patch=$((patch + 1))
            echo "$patch"
            next_version="$major.$minor.$patch"
          fi
          echo "version=$next_version" >> $GITHUB_OUTPUT
          echo "$version"
          echo "Version = $version" >> $GITHUB_STEP_SUMMARY

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        run: dotnet publish -c Release -r win-x64 --self-contained true -o publish

      - name: Archive published app
        run: Compress-Archive -Path publish\* -DestinationPath match-subtitles.zip

      
      - name: Run release action
        uses: dimi7rof/create-release@v2
        with:
          name: Release $version
          version: $version
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.set_version.outputs.version }}
          files: match-subtitles.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
